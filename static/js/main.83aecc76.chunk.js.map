{"version":3,"sources":["components/Header.js","components/Footer.js","components/FlightsSearchResult.js","components/FlightSearch.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","Flights","render","bind","matchID","fixDate","state","sortDirection","columns","undefined","classes","id","places","PlaceId","Name","date","Moment","format","quotes","this","flightsReponse","Quotes","currencies","Currencies","Places","carriers","Carriers","minimumPrice","i","length","MinPrice","originName","OutboundLeg","OriginId","destinationName","DestinationId","DepartureDate","Airline","find","carrier","CarrierId","CarrierIds","Currency","Symbol","console","log","field","headerName","width","cellClassName","params","clsx","minPrice","value","root","style","display","height","paddingTop","paddingLeft","paddingRight","label","flexGrow","rows","textAlign","hideFooterPagination","autoHeight","disableColumnResize","disableColumnMenu","disableSelectionOnClick","pageSize","React","Component","withStyles","backgroundColor","color","fontWeight","font","FlightSearch","handleSubmit","componentDidMount","handleChange","Date","originplace","destinationplace","outboundpartialdate","inboundpartialdate","currency","currencyResponse","currentCurrencyState","getCurrencyAPI","a","res","fetch","response","text","responseBody","jsonPlaces","JSON","parse","request","json","setState","wrapper","event","currentStateFlight","queryString","reqOptions","method","headers","process","stringify","fetchMyFlightsAPI","preventDefault","target","Grid","container","spacing","item","xs","Paper","paper","onSubmit","htmlFor","TextField","placeholder","size","type","variant","margin","onChange","e","required","InputLabelProps","shrink","select","map","currencyItem","MenuItem","Code","FlightsSearchResult","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83aecc76.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\n\nfunction Header(props) { \n    // another function\n    return(\n        <div className=\"header\">\n            {\n            //props.title takes in the argument props from Header(props)\n            // .title is the \"title\" we defined in the Header tag in App.js\n            // property of props.title is the string \"SkyScanner Flights\"\n            }\n            {props.title} \n        \n        {\n        // figure this out\n        //<img src={logo} alt=\"logo\"></img>    \n        }\n       \n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(props) { \n    return(\n        <div className=\"footer\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './Flights.css';\nimport Moment from 'moment';\nimport { DataGrid } from '@material-ui/data-grid';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\n\nconst styles = ({\n    root: {\n        '& .super-app.minPrice': {\n            backgroundColor: '#c4eafd',\n            color: 'black',\n            fontWeight: '600',\n            font: 'Times New Roman',\n        }\n    }\n});\n\nclass Flights extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.render = this.render.bind(this);\n        this.matchID = this.matchID.bind(this);\n        this.fixDate = this.fixDate.bind(this);\n        \n        this.state = {\n            sortDirection: 'desc',\n            columns: undefined,\n            classes: undefined\n        }\n       \n    }\n    \n\n    matchID(id, places) {\n        if(id === places[0].PlaceId) {\n            return places[0].Name;\n        }\n        else {\n            return places[1].Name;\n        }\n        \n    }\n\n    fixDate(date) {\n        date = Moment(date).format('MM-DD-YYYY');\n        return date;\n    }\n        \n\n    render() { \n\n        var quotes = this.props.flightsReponse.Quotes;\n        var currencies = this.props.flightsReponse.Currencies\n        var places = this.props.flightsReponse.Places\n        var carriers = this.props.flightsReponse.Carriers\n    \n        var minimumPrice = 0;\n\n        for(var i=0; i<quotes.length; i++) {\n            if (i === 0) {\n             minimumPrice = quotes[i].MinPrice;\n            }\n             quotes[i].originName = this.matchID(quotes[i].OutboundLeg.OriginId,places);\n             quotes[i].destinationName = this.matchID(quotes[i].OutboundLeg.DestinationId,places);\n             quotes[i].id = i;\n             quotes[i].DepartureDate = this.fixDate(quotes[i].OutboundLeg.DepartureDate);\n             if (minimumPrice > quotes[i].MinPrice) {\n                 minimumPrice = quotes[i].MinPrice;\n            }\n\n            // put if statement to catch error if no carriers are found to match\n            // how to handle more than 1 carrier\n            quotes[i].Airline = carriers.find(carrier => carrier.CarrierId = quotes[i].OutboundLeg.CarrierIds).Name;\n            quotes[i].Currency = currencies[0].Symbol;\n        \n            console.log(\"hello\");\n         }\n         console.log(\"after for loop\");\n    \n         this.state.columns = [\n            { field: 'Airline', headerName: 'Airline', width: 150 },\n            { field: 'originName', headerName: 'Origin', width: 250},\n            { field: 'destinationName', headerName: 'Destination', width: 250 },\n            { field: 'DepartureDate', headerName: 'Departure Date', width: 250 },\n            { field: 'Currency', headerName: 'Cur.', width: 90 },\n            { field: 'MinPrice', headerName: 'Price', width: 124, cellClassName: (params) =>\n            clsx('super-app', \n            {\n                minPrice: params.value <= minimumPrice\n            }\n            )}\n       ];\n\n        const { classes } = this.props;\n\n        return(\n           <div className={classes.root} style={{ display: 'flex', height: 350, paddingTop: 30, paddingLeft: 100, paddingRight: 100, label: \"dataGrid\"}}>\n            <div style={{ flexGrow: 1 }}>\n            <DataGrid rows={quotes} columns={this.state.columns} style={{textAlign: \"center\"}} hideFooterPagination={false} autoHeight={true} disableColumnResize={true} disableColumnMenu disableSelectionOnClick pageSize={5} />\n            </div>\n            </div>\n        )\n    }\n\n\n\n}\n\nFlights.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(Flights);\n","import React from 'react';\nimport './FlightInfo.css';\nimport FlightsSearchResult from './FlightsSearchResult';\nimport TextField from '@material-ui/core/TextField';  \nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign: 'center',\n    }\n};\n\nclass FlightSearch extends React.Component {\n\nconstructor(props) {\n\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.render = this.render.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    \n   \n\n    this.state = {\n        date: new Date(),\n        originplace: \"\",\n        destinationplace: \"\",\n        outboundpartialdate: \"\",\n        inboundpartialdate: \"\",\n        currency: \"USD\",\n        flightsReponse: undefined,\n        currencyResponse: undefined\n       \n    };\n\n}\n\ncomponentDidMount() {\n\n    const currentCurrencyState = this;\n\n        async function getCurrencyAPI() {\n\n            const request=async()=>{\n                const response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/reference/v1.0/currencies\", {\n                    \"method\": \"GET\",\n                    \"headers\": {\n                    \"x-rapidapi-key\": \"94873677e7msh2a304b836ad44f7p1ea0c0jsn6845e118a98a\",\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\"\n                }});\n\n                const responseBody= (await response.text());\n                const jsonPlaces=JSON.parse(responseBody);\n                return jsonPlaces;\n              }\n                const res =  request()\n                return res;\n            }\n\n\n            async function wrapper(){\n\n                let json = (await getCurrencyAPI()); \n\n                currentCurrencyState.setState({currencyResponse: json.Currencies});\n            }\n\n            wrapper();\n\n    getCurrencyAPI();\n\n}\n\n\nhandleSubmit(event){\n    const currentStateFlight = this; \n\n    async function fetchMyFlightsAPI(currency, queryString) {\n        const reqOptions = {\n            method: 'GET',\n            headers: {\n                \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n                \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                \"useQueryString\": true\n            }\n        }\n       \n        let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/\" + currency + \"/en-US/\" + queryString, reqOptions);\n        response = await response.json();\n        \n\n        console.log(\"fetched the data\" + JSON.stringify(response));\n\n        currentStateFlight.setState({flightsReponse: response});  \n       \n    }\n\n    fetchMyFlightsAPI(this.state.currency, this.state.originplace + \"/\" + this.state.destinationplace + \"/\" + this.state.outboundpartialdate + \"?inboundpartialdate=\" + this.state.inboundpartialdate);\n\n    event.preventDefault();\n\n\n}\n\nhandleChange(event){\n    this.setState({currency: event.target.value});\n    console.log(\"clicked\");\n}\n\n\n\n\nrender() { \n\n    const { classes } = this.props;\n\n    return(\n    <div>\n        <div id=\"divForm\" className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs>\n                <Paper className={classes.paper}>\n                    <form className=\"user-input\" onSubmit={this.handleSubmit}>\n                               \n                        <label htmlFor=\"queryInput\">Leaving From:</label>\n\n                                <TextField\n                                   className=\"TextField-without-border-radius\"\n                                   id=\"outlined-basic\" \n                                   placeholder= 'Airport Code(BOS)'\n                                   label=\"\" \n                                   size=\"small\"\n                                   type=\"\"\n                                   variant=\"outlined\"\n                                   margin='none'\n                                   value={this.state.originplace}\n                                   onChange={e => this.setState({originplace: e.target.value})} required\n                                   InputLabelProps={{\n                                       shrink: true,\n                                   }} /> \n                      \n                               <label htmlFor=\"queryInput\">Going To:</label>\n\n                                <TextField\n                                   className=\"TextField-without-border-radius\"\n                                   id=\"outlined-basic\" \n                                   placeholder= 'Airport Code(JFK)'\n                                   label=\"\" \n                                   size=\"small\"\n                                   type=\"\"\n                                   variant=\"outlined\"\n                                   margin='none'\n                                   value={this.state.destinationplace}\n                                   onChange={e => this.setState({destinationplace: e.target.value})} required\n                                   InputLabelProps={{\n                                       shrink: true,\n                                   }}/> \n\n                               <label htmlFor=\"queryInput\">Departure Date:</label>\n                               \n                               <TextField\n                                   className=\"TextField-without-border-radius\"\n                                   id=\"date\"\n                                   label=\"\"\n                                   size=\"small\"\n                                   type=\"date\"\n                                   variant=\"outlined\"\n                                   margin='none'\n                                   value={this.state.outboundpartialdate}\n                                   onChange={e => this.setState({outboundpartialdate: e.target.value})} required\n                                   InputLabelProps={{\n                                       shrink: true,\n                                   }} />\n                             \n\n                               <label htmlFor=\"queryInput\">Returning Date:</label>\n                              \n                               <TextField\n                                   className=\"TextField-without-border-radius\"\n                                   id=\"date\"\n                                   label=\"\"\n                                   size=\"small\"\n                                   type=\"date\"\n                                   margin='none'\n                                   variant=\"outlined\"\n                                   value={this.state.inboundpartialdate}\n                                   onChange={e => this.setState({inboundpartialdate: e.target.value})} required\n                                   InputLabelProps={{\n                                       shrink: true,\n                                   }}/>\n                               \n\n                               <label htmlFor=\"queryInput\">Currency:</label>\n                              \n                               <TextField\n                                   className=\"TextField-without-border-radius\"\n                                   id=\"currencyDropDown\"\n                                   select \n                                   label=\"\"\n                                   size=\"small\"\n                                   margin='none'\n                                   variant=\"outlined\"\n                                   value={this.state.currency ? this.state.currency : \"\"}\n                                   onChange={this.handleChange} required\n                                   InputLabelProps={{\n                                       shrink: true,\n                                   }}>\n                                    \n                                    {\n                                    this.state.currencyResponse != null ?\n                                    this.state.currencyResponse.map((currencyItem) => (\n                                        <MenuItem key={currencyItem.Code} value={currencyItem.Code}>\n                                            {currencyItem.Code}\n                                        </MenuItem>\n                                    )) : console.log(\"currencies are not available yet!\")\n                                    }\n                            </TextField>\n\n                            <Grid id=\"searchGrid\" item xs>\n                                <Paper className={classes.paper}>\n                                    <button className=\"search\">Search</button>\n                                </Paper>\n                            </Grid>\n                        </form>\n                </Paper>\n            </Grid>\n        </Grid>\n\n    </div>\n\n    <div> \n        {this.state.flightsReponse &&  <FlightsSearchResult flightsReponse={this.state.flightsReponse}/>} \n    </div>                     \n      \n           \n</div>\n\n)\n}\n\n}\n\n\nFlightSearch.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\n\nexport default withStyles(styles)(FlightSearch);\n","import React from 'react';\nimport './App.css';\n//import Autocom from './components/Autocomplete';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport FlightSearch from './components/FlightSearch';\n\n\nfunction App() {\n  \n  return (\n\n    <div className=\"App\">\n      <Header title=\"Nupur Shukla's Flight Search\"></Header>\n      <FlightSearch></FlightSearch>\n      <Footer title=\"SkyScanner API\"></Footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}